{"name":"Jipmunk","body":"### Welcome to jipmunk.\r\njipmunk is a fast and leightweight 2D rigid body physics library written in Java. It is a direct port of the Chipmunk Physics library written by Scott Lembcke (http://chipmunk-physics.net/).\r\n\r\n###Features\r\n* Designed specifically for 2D video games.\r\n* Circle, convex polygon, and beveled line segment collision primitives.\r\n* Multiple collision primitives can be attached to a single rigid body.\r\n* Fast broad phase collision detection by using a bounding box tree with great temporal coherence or a spatial hash.\r\n* Extremely fast impulse solving by utilizing Erin Catto’s contact persistence algorithm.\r\n* Supports sleeping objects that have come to rest to reduce the CPU load.\r\n* Support for collision event callbacks based on user definable object types types.\r\n* Flexible collision filtering system with layers, exclusion groups and callbacks.\r\n* Can be used to create all sorts of effects like one way platforms or buoyancy areas. (Examples included)\r\n* Supports point, segment (raycasting), shape and bounding box queries to the collision detection system.\r\n* Impulses amounts can be read out for gameplay effects.\r\n* Large variety of joints – easily make vehicles, ragdolls, and more.\r\n* Joint callbacks.\r\n* Can be used to easily implement breakable or animated joints. (Examples included)\r\n* Maintains a contact graph of all colliding objects.\r\n* Lightweight Java implementation with no external dependencies.\r\n* Simple, read the documentation and see!\r\n* Unrestrictive MIT license","tagline":"Java port of the Chipmunk physics engine","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}